/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

export function PerformanceModel(props) {
  const groupRef = useRef();
  const { nodes, materials } = useGLTF("/assets/abstract_ball.gltf");

  // Rotate the model slowly
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y += 0.01;
    }
  });

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <ambientLight intensity={0.5} />
      <directionalLight position={[10, 10, 5]} intensity={1} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.part1.geometry}
        material={nodes.part1.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.part2.geometry}
        material={nodes.part2.material}
      />
    </group>
  );
}

useGLTF.preload("/assets/abstract_ball.gltf");
